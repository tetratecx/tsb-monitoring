{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Operational metrics to indicate Tetrate Service Bridge API server health.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 63,
      "title": "Management Plane Front Envoy",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Rate of successful requests to Front Envoy. This includes all user and cluster requests into the management plane.\n\nNote: This indicates the health of the AuthZ server not whether the user or cluster making the request has the correct permissions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 1
      },
      "id": 65,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(envoy_cluster_internal_upstream_rq_total{envoy_response_code=~\"2.*|3.*|401\", component=\"front-envoy\"}[1m])) by (envoy_cluster_name)",
          "interval": "",
          "legendFormat": "{{envoy_cluster_name}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Front Envoy Success Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The error rate of requests to the Front Envoy server. This includes all user and cluster requests into the management plane.\nNote: This indicates the health of the AuthZ server not whether the user or cluster making the request has the correct permissions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 1
      },
      "id": 68,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(envoy_cluster_internal_upstream_rq_total{envoy_response_code!~\"2.*|3.*|401\", component=\"front-envoy\"}[1m])) by (envoy_cluster_name, envoy_response_code)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{envoy_cluster_name}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Front Envoy Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Front Envoy request latency percentiles.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 1
      },
      "id": 69,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(envoy_cluster_internal_upstream_rq_time_bucket{component=\"front-envoy\"}[1m])) by (le, envoy_cluster_name))",
          "interval": "",
          "legendFormat": "{{envoy_cluster_name}} P99",
          "refId": "A"
        },
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.95, sum(rate(envoy_cluster_internal_upstream_rq_time_bucket{component=\"front-envoy\"}[1m])) by (le, envoy_cluster_name))",
          "interval": "",
          "legendFormat": "{{envoy_cluster_name}} P95",
          "refId": "B"
        }
      ],
      "title": "Front Envoy Latency",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 67,
      "panels": [],
      "title": "API Server Requests",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Rate of successful requests to the TSB apiserver from the UI and CLI.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 72,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(grpc_server_handled_total{component=\"tsb\", grpc_code=\"OK\", grpc_type=\"unary\", grpc_method!=\"SendAuditLog\"}[1m])) by (grpc_method)",
          "interval": "",
          "legendFormat": "{{grpc_method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "TSB Success Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Rate of failed requests to the TSB apiserver from the UI and CLI.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "NotFound",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "Aborted",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "AlreadyExists",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "Canceled",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DataLoss",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "DeadlineExceeded",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "FailedPrecondition",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "Internal",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "InvalidArgument",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "NotFound",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "OutOfRange",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "PermissionDenied",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "ResourceExhausted",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unauthenticated",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unavailable",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unimplemented",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown",
                  "Unknown"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 73,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(grpc_server_handled_total{component=\"tsb\", grpc_code!=\"OK\", grpc_type=\"unary\", grpc_method!=\"SendAuditLog\"}[1m])) by (grpc_code, grpc_method)",
          "interval": "",
          "legendFormat": "{{grpc_method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "TSB Error Rate",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 83,
      "panels": [],
      "title": "Authentication",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The success rate for authentication operations for each type of authentication provider.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 19
      },
      "id": 86,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "expr": "sum(rate(iam_auth_time_count{error=\"\"}[1m])) by (provider)",
          "interval": "",
          "legendFormat": "{{provider}}",
          "refId": "C"
        }
      ],
      "title": "Authentication Success Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The error rate for authentication operations for each type of authentication provider.\n\nSpikes may indicate problems with the provider or the given credentials, such as expired JWT tokens.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 19
      },
      "id": 87,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "expr": "sum(rate(iam_auth_time_count{error!=\"\"}[1m])) by (provider)",
          "interval": "",
          "legendFormat": "{{provider}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Authentication Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The latency for authentication operations for each type of authentication provider.\n\nSpikes in the latency may indicate that the authentication provider has a sub-optimal configuration (such as too wide LDAP queries).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 19
      },
      "id": 81,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "expr": "histogram_quantile(0.99, sum(rate(iam_auth_time_bucket{error=\"\"}[1m])) by (le, provider))",
          "interval": "",
          "legendFormat": "{{provider}} P99",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "expr": "histogram_quantile(0.95, sum(rate(iam_auth_time_bucket{error=\"\"}[1m])) by (le, provider))",
          "interval": "",
          "legendFormat": "{{provider}} P95",
          "refId": "A"
        }
      ],
      "title": "Authentication Latency",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 30,
      "panels": [],
      "title": "Data Store",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Request rate for operations persisting data to the datastore grouped by method and kind.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 28
      },
      "id": 32,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(persistence_operation_total[1m])) by (kind, method)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{method}} / {{kind}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Data Store Operations Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The request error rate for operations persisting data to the datastore grouped by method and kind.\nThis graph also includes transactions. These are standard SQL transactions and consists of multiple operations.\nNote: The graph explicitly excludes \"resource not found\" errors. A small number of \"not found\" responses are normal as TSB for optimization often uses Get queries instead of Exists to determine the resource existence.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 28
      },
      "id": 70,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(persistence_operation_total{error=\"true\", kind!=\"iam_revoked_token\"}[1m])) by (kind, method, error)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{method}} / {{kind}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Data Store Operations Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The request latency for operations persisting data to the datastore grouped by method.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 28
      },
      "id": 71,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(persistence_operation_duration_bucket{}[1m])) by (le, method))",
          "hide": false,
          "interval": "",
          "legendFormat": "{{method}} P99",
          "refId": "A"
        }
      ],
      "title": "Data Store Operations Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The rate of newly creates transactions dry run mode. These are standard SQL transactions and consist of multiple operations.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 36
      },
      "id": 105,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(persistence_transaction_total[1m])) by (dry_run_mode)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{dry_run_mode}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Data Store Transaction Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The rate of  transactions that failed at execution time by dry run mode. These are standard SQL transactions and consist of multiple operations.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 36
      },
      "id": 106,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(persistence_transaction_total{error=\"true\"}[1m])) by (dry_run_mode)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{dryRunMode}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Data Store Transaction Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "TheP99 latency of transactions execution grouped by dry run mode.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 36
      },
      "id": 107,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(persistence_transaction_duration_bucket[1m])) by (le, dry_run_mode))",
          "hide": false,
          "interval": "",
          "legendFormat": "{{dry_run_mode}} P99",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Data Store Transactions Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of running transactions on the datastore.\n\nThis graph shows how many active transactions are running at a given point in time. It helps you understand the load of the system generated by concurrent access to the platform.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 0,
        "y": 44
      },
      "id": 75,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(persistence_concurrent_transaction{}) by (dry_run_mode)",
          "format": "time_series",
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Active Tx {{dry_run_mode}}",
          "refId": "A"
        }
      ],
      "title": "Active Transactions",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "This is the number of child transactions that do not match parent's transaction dry run mode.\n\nThis means that the dry run mode has not properly been propagated to child transactions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 8,
        "y": 44
      },
      "id": 108,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(persistence_dry_run_transaction_mismatch_total)",
          "format": "time_series",
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Mismaches",
          "refId": "A"
        }
      ],
      "title": "Mismatching Transactions dry run mode",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 54
      },
      "id": 98,
      "panels": [],
      "title": "Database Pool",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of connections currently in use.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 55
      },
      "id": 93,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(max_over_time(go_sql_in_use_connections{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "In Use Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of established connections both in use and idle. Also the maximum allowed number of connections is displayed.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Max Allowed"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#F2CC0C",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Open"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#73BF69",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 55
      },
      "id": 95,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(max_over_time(go_sql_open_connections{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "Open {{component}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(max_over_time(go_sql_max_open_connections{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "Max Allowed {{component}}",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Open Connections/Max Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The total number of connections waited for.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 62
      },
      "id": 100,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(go_sql_wait_count_total{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Connections Waited",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The total time blocked waiting for a new connection.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 62
      },
      "id": 101,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(go_sql_wait_duration_seconds_total{component=\"tsb\", db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Time Waiting for Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of created connections",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 69
      },
      "id": 103,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(db_sql_created_connections_duration_count{}[1m])) by (component)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Created Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The p99 duration in milliseconds for creating new connection.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 69
      },
      "id": 104,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(db_sql_created_connections_duration_bucket{}[1m])) by (le, component))",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Create Connections Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of closed connections by reasons.\n- Max Idle: The total number of connections closed due to SetMaxIdleConns.\n- Idle Time: The total number of connections closed due to SetConnMaxIdleTime.\n- Max Lifetime: The total number of connections closed due to SetConnMaxLifetime.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 76
      },
      "id": 102,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(go_sql_max_idle_closed_total{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "Max Idle {{component}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(go_sql_max_idle_time_closed_total{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "Idle Time {{component}}",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(increase(go_sql_max_lifetime_closed_total{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "Max Lifetime {{component}}",
          "range": true,
          "refId": "C"
        }
      ],
      "title": "Closed Connections",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of idle connections.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 76
      },
      "id": 99,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "9.1.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(max_over_time(go_sql_idle_connections{db_name=\"dbpool\"}[$__rate_interval])) by(component)",
          "hide": false,
          "interval": "",
          "legendFormat": "{{component}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "Idle Connections",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 83
      },
      "id": 89,
      "panels": [],
      "title": "Service Registry",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "This metric shows the amount of operations done by the service registry. The service registry will handle all service changes across the clusters, detecting and persisting them in the database.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 84
      },
      "id": 91,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "expr": "sum(increase(service_registry_operation_duration_count{error=\"\"}[1m])) by (operation)",
          "legendFormat": "{{operation}}",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "expr": "sum(increase(service_registry_operation_duration_count{error!=\"\"}[1m])) by (operation)",
          "hide": false,
          "legendFormat": "{{operation}} errors",
          "range": true,
          "refId": "B"
        }
      ],
      "title": "Service Registry Operations",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Duration of operations performed by the service registry.\n\nThis graph also includes the total duration of the reconciliation process during which the service registry iterates through all clusters to identify changes that need to be persisted in the database.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsZero",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byValue",
              "options": {
                "op": "gte",
                "reducer": "allIsNull",
                "value": 0
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": true,
                  "viz": false
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 84
      },
      "id": 92,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(service_registry_operation_duration_bucket{}[1m])) by (le, operation))",
          "hide": false,
          "interval": "",
          "legendFormat": "{{operation}} P99",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(service_registry_total_duration_bucket{}[1m])) by (le))",
          "hide": false,
          "interval": "",
          "legendFormat": "Total reconciliation P99",
          "range": true,
          "refId": "D"
        }
      ],
      "title": "Service Registry Operations Duration",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 91
      },
      "id": 48,
      "panels": [],
      "title": "NGAC",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Successful request rate of PDP grouped by method.\nNGAC is a graph-based authorization framework that consists of three main components:\nPolicy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. The other components of NGAC use this graph to perform access decisions.\nPolicy Decision Point (PDP): Performs access decisions based on the NGAC graph's policies. The PDP is used to perform binary Allow/Deny access decisions (Check) and determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\nPolicy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. A successful request does not represent \"access granted\" decisions; they represent the access decision requests for which a verdict was obtained.\nA drop in this metric may show that operations against the graph are failing. This may mean that the graph is unavailable for reads and this is usually a consequence of failures in the PIP. Failures in the PIP for write operations will result in the graph not being properly updated to the latest status, resulting in access decisions based on stale models.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 0,
        "y": 92
      },
      "id": 40,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(ngac_pdp_operation_total{error=\"\"}[1m])) by (method)",
          "interval": "",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "PDP Success Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Rate of errors for PDP requests grouped by method.\nNGAC is a graph-based authorization framework that consists of three main components:\nPolicy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. The other components of NGAC use this graph to perform access decisions.\nPolicy Decision Point (PDP): Performs access decisions based on the NGAC graph's policies. The PDP is used to perform binary Allow/Deny access decisions (Check) and determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\nPolicy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. A successful request does not represent \"access granted\" decisions; they represent the access decision requests where a verdict was obtained.\nFailed requests to the PDP show the number of requests from the PEP to the PDP that have failed. They do not represent \"access denied\" decisions; they represent the access decision requests where a verdict could not be obtained.\nA rise in this metric may show that operations against the graph are failing. This may mean that the graph is unavailable for reads and this is usually a consequence of failures in the PIP. Failures in the PIP for write operations will result in the graph not being correctly updated to the latest status, resulting in access decisions based on stale models.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 8,
        "y": 92
      },
      "id": 59,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(ngac_pdp_operation_total{error!=\"\"}[1m])) by (method)",
          "interval": "",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "PDP Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "PDP latency percentiles grouped by method.\nNGAC is a graph-based authorization framework that consists of three main components:\nPolicy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. The other components of NGAC use this graph to perform access decisions.\nPolicy Decision Point (PDP): Performs access decisions based on the NGAC graph's policies. The PDP is used to perform binary Allow/Deny access decisions (Check) and determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\nPolicy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. A successful request does not represent \"access granted\" decisions; they represent the access decision requests for which a verdict was obtained.\nThis metric shows the time it takes to get an access decision for authorization requests.\nDegradation in PDP operations may result in general degradation of the system. PDP latency represents the time it takes to make access decisions, and that will impact user experience since access decisions are made and enforced for every operation.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 8,
        "x": 16,
        "y": 92
      },
      "id": 44,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(ngac_pdp_operation_duration_bucket{}[1m])) by (method, le))",
          "interval": "",
          "legendFormat": "{{method}} P99",
          "refId": "A"
        },
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.95, sum(rate(ngac_pdp_operation_duration_bucket{}[1m])) by (method, le))",
          "interval": "",
          "legendFormat": "{{method}} P95",
          "refId": "B"
        }
      ],
      "title": "PDP Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Successful request rate of PIP grouped by method.\n\nNGAC is a graph based authorization framework that consists on three main components:\n\n* Policy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. This graph is used by the other components of NGAC to perform access decisions.\n* Policy Decision Point (PDP): Performs access decisions based on the policies configured in the NGAC graph. The PDP is used to perform binary Allow/Deny access decisions (Check), and to determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\n* Policy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. Successful request do not represent \"access granted\" decisions; they just represent the access decision requests for which a verdict was obtained.\n\nPIP operations are executed against the NGAC graph to represent and maintain the objects in the system and the relationships between them.\n\nA drop in this metric may show that operations against the graph are failing. This may mean that the graph is unavailable for reads, or that it is failing to persist data. Read failures may result in failed access decisions (in the PDP) and user interaction with the system may be rejected as well. Failures in write operations will result in the graph not being properly updated to the latest status and that could result in access decisions based on stale models.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 99
      },
      "id": 77,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(ngac_pip_operation_total{error=\"\"}[1m])) by (method)",
          "interval": "",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "PIP Success Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "PiP latency percentiles grouped by method.\n\nNGAC is a graph based authorization framework that consists on three main components:\n\n* Policy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. This graph is used by the other components of NGAC to perform access decisions.\n* Policy Decision Point (PDP): Performs access decisions based on the policies configured in the NGAC graph. The PDP is used to perform binary Allow/Deny access decisions (Check), and to determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\n* Policy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. Successful request do not represent \"access granted\" decisions; they just represent the access decision requests for which a verdict was obtained.\n\nThis metric shows the time it takes for a PIP operation to complete and, in the case of write operations, to have data persisted in the NGAC graph.\n\nDegradation in PIP operations may result in general degradation of the system. PIP latency represents the time it takes to access the NGAC graph, and this directly affects the PDP when running access decisions. A degraded PIP may result in a degraded PDP, and that will impact user experience, as access decisions are made and enforced for every operation.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 99
      },
      "id": 79,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.99, sum(rate(ngac_pip_operation_duration_bucket{}[1m])) by (method, le))",
          "interval": "",
          "legendFormat": "{{method}} P99",
          "refId": "A"
        },
        {
          "exemplar": false,
          "expr": "histogram_quantile(0.95, sum(rate(ngac_pip_operation_duration_bucket{}[1m])) by (method, le))",
          "interval": "",
          "legendFormat": "{{method}} P95",
          "refId": "B"
        }
      ],
      "title": "PIP Latency",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "Rate of errors for PIP requests grouped by method.\n\nNGAC is a graph based authorization framework that consists on three main components:\n\n* Policy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. This graph is used by the other components of NGAC to perform access decisions.\n* Policy Decision Point (PDP): Performs access decisions based on the policies configured in the NGAC graph. The PDP is used to perform binary Allow/Deny access decisions (Check), and to determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\n* Policy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. Successful request do not represent \"access granted\" decisions; they just represent the access decision requests for which a verdict was obtained.\n\nPIP operations are executed against the NGAC graph to represent and maintain the objects in the system and the relationships between them.\n\nNote: the \"Node not found\" errors are explicitly excluded as TSB often uses `GetNode` method instead of `Exists` to determine the node existence, for the purposes of optimisation.\n\nA general raise in this metric may show that operations against the graph are failing. This may mean that the graph is unavailable for reads, or that it is failing to persist data. Read failures may result in failed access decisions (in the PDP) and user interaction with the system may be rejected as well. Failures in write operations will result in the graph not being properly updated to the latest status and that could result in access decisions based on stale models.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 106
      },
      "id": 78,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "P1809F7CD0C75ACF3"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "sum(rate(ngac_pip_operation_total{error!=\"\", error!=\"Node not found\"}[1m])) by (method)",
          "interval": "",
          "legendFormat": "{{method}}",
          "range": true,
          "refId": "A"
        }
      ],
      "title": "PIP Error Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "P1809F7CD0C75ACF3"
      },
      "description": "The number of running transactions on the NGAC PIP.\nNGAC is a graph-based authorization framework that consists on three main components:\nPolicy Information Point (PIP): Maintains the NGAC graph. It creates the nodes and edges in the graph that represents the state of the system. The other components of NGAC use this graph to perform access decisions.\nPolicy Decision Point (PDP): Performs access decisions based on the NGAC graph's policies. The PDP is used to perform binary Allow/Deny access decisions (Check) and determine the objects a user has access to (List). These access decisions are enforced at the Policy Enforcement Point (PEP).\nPolicy Enforcement Point (PEP): Enforces access control by calling the PDP to get an access decision. Successful requests to the PDP show the number of requests that the PEP has successfully made to the PDP. A successful request does not represent \"access granted\" decisions; they represent the access decision requests for which a verdict was obtained.\nThis metric shows the number of active write operations against the NGAC graph. It can be useful to understand the load of the system generated by concurrent access to the platform.\n",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 106
      },
      "id": 76,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.4",
      "targets": [
        {
          "exemplar": false,
          "expr": "sum(ngac_pip_concurrent_transaction{})",
          "format": "time_series",
          "instant": false,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Active PIP Tx Count",
          "refId": "A"
        }
      ],
      "title": "Active PIP Transactions",
      "type": "timeseries"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 39,
  "tags": [
    "tsb",
    "iam",
    "front-envoy",
    "ngac"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "utc",
  "title": "TSB Operational Status",
  "uid": "Wpn4fqLSk",
  "version": 1,
  "weekStart": ""
}
